//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Server.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///rem dotnet restore
        ///
        ///rem cd src/Module/Admin &amp;&amp; dotnet build &amp;&amp; cd ../../../
        ///rem cd src/Module/Order &amp;&amp; dotnet build &amp;&amp; cd ../../../
        ///rem cd src/Module/Search &amp;&amp; dotnet build &amp;&amp; cd ../../../
        ///
        ///dotnet build
        ///
        ///rem cd src/WebHost &amp;&amp; npm install &amp;&amp; npm install --global gulp-cli &amp;&amp; gulp copy-module
        ///cd src/WebHost &amp;&amp; gulp copy-module &amp;&amp; cd ../../
        ///
        ///echo &quot;Then type &apos;dotnet run&apos; in src/WebHost to start the app.&quot;
        ///
        ///pause 的本地化字符串。
        /// </summary>
        internal static string _build_bat {
            get {
                return ResourceManager.GetString("_build_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 ###############################################################################
        ///# Set default behavior to automatically normalize line endings.
        ///###############################################################################
        ///* text=auto
        ///
        ///###############################################################################
        ///# Set default behavior for command prompt diff.
        ///#
        ///# This is need for earlier builds of msysgit that does not have it on by
        ///# default for csharp files.
        ///# Note: This is only used by comma [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string _gitattributes {
            get {
                return ResourceManager.GetString("_gitattributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 ## Ignore Visual Studio temporary files, build results, and
        ///## files generated by popular Visual Studio add-ons.
        ///
        ///# User-specific files
        ///*.suo
        ///*.user
        ///*.userosscache
        ///*.sln.docstates
        ///
        ///# User-specific files (MonoDevelop/Xamarin Studio)
        ///*.userprefs
        ///
        ///# Build results
        ///[Dd]ebug/
        ///[Dd]ebugPublic/
        ///[Rr]elease/
        ///[Rr]eleases/
        ///[Xx]64/
        ///[Xx]86/
        ///[Bb]uild/
        ///bld/
        ///[Bb]in/
        ///[Oo]bj/
        ///
        ///# Visual Studio 2015 cache/options directory
        ///.vs/
        ///# Uncomment if you have tasks that create the project&apos;s static files in wwwr [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string _gitignore {
            get {
                return ResourceManager.GetString("_gitignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] htm_zip {
            get {
                object obj = ResourceManager.GetObject("htm_zip", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.AspNetCore.Cors;
        ///using Microsoft.AspNetCore.Http;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.AspNetCore.Mvc.Filters;
        ///using Microsoft.Extensions.Logging;
        ///using Newtonsoft.Json;
        ///using System;
        ///using System.Collections;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///
        ///[ServiceFilter(typeof(CustomExceptionFilter)), EnableCors(&quot;cors_all&quot;)]
        ///public partial class BaseController : Controller {
        ///	public ILogger _logger;
        ///	public ISession Session { get { return HttpContext.Session; } } [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_Controllers_BaseController_cs {
            get {
                return ResourceManager.GetString("Infrastructure_Controllers_BaseController_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.AspNetCore.Hosting;
        ///using Microsoft.AspNetCore.Http;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.AspNetCore.Mvc.Filters;
        ///using Microsoft.Extensions.Configuration;
        ///using Microsoft.Extensions.Logging;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///public class CustomExceptionFilter : Attribute, IExceptionFilter {
        ///	private ILogger _logger = null;
        ///	private IConfiguration _cfg = null;
        ///	privat [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_Controllers_CustomExceptionFilter_cs {
            get {
                return ResourceManager.GetString("Infrastructure_Controllers_CustomExceptionFilter_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Newtonsoft.Json;
        ///using System;
        ///using System.Text.RegularExpressions;
        ///
        ///public static class GlobalExtensions {
        ///	public static object Json(this Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper html, object obj) {
        ///		string str = JsonConvert.SerializeObject(obj);
        ///		if (!string.IsNullOrEmpty(str)) str = Regex.Replace(str, @&quot;&lt;(/?script[\s&gt;])&quot;, &quot;&lt;\&quot;+\&quot;$1&quot;, RegexOptions.IgnoreCase);
        ///		if (html == null) return str;
        ///		return html.Raw(str);
        ///	}
        ///
        ///	/// &lt;summary&gt;
        ///	/// 转格林时间，并以ISO8601格式化字符串
        ///	/// &lt;/summary&gt; [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_Extensions_GlobalExtensions_cs {
            get {
                return ResourceManager.GetString("Infrastructure_Extensions_GlobalExtensions_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.AspNetCore.Builder;
        ///using Microsoft.Extensions.DependencyInjection;
        ///
        ///public interface IModuleInitializer {
        ///	void Init(IApplicationBuilder services);
        ///} 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_ModuleBasic_IModuleInitializer_cs {
            get {
                return ResourceManager.GetString("Infrastructure_ModuleBasic_IModuleInitializer_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System.Linq;
        ///using System.Reflection;
        ///
        ///public class ModuleInfo {
        ///	public string Name { get; set; }
        ///
        ///	public Assembly Assembly { get; set; }
        ///
        ///	public string ShortName {
        ///		get {
        ///			return Name.Split(&apos;.&apos;).Last();
        ///		}
        ///	}
        ///
        ///	public string Path { get; set; }
        ///} 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_ModuleBasic_ModuleInfo_cs {
            get {
                return ResourceManager.GetString("Infrastructure_ModuleBasic_ModuleInfo_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.AspNetCore.Mvc.Razor;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///public class ModuleViewLocationExpander : IViewLocationExpander {
        ///	private const string _moduleKey = &quot;module&quot;;
        ///
        ///	public IEnumerable&lt;string&gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&lt;string&gt; viewLocations) {
        ///		if (context.Values.ContainsKey(_moduleKey)) {
        ///			var module = context.Values[_moduleKey];
        ///			if (!string.IsNullOrWhiteSpace(module)) {
        ///				var moduleViewLocations = new stri [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Infrastructure_ModuleBasic_ModuleViewLocationExpander_cs {
            get {
                return ResourceManager.GetString("Infrastructure_ModuleBasic_ModuleViewLocationExpander_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 [Mm]odule/
        ///wwwroot/[Mm]odule/ 的本地化字符串。
        /// </summary>
        internal static string WebHost_gitignore {
            get {
                return ResourceManager.GetString("WebHost_gitignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &quot;use strict&quot;;
        ///
        ///var gulp = require(&apos;gulp&apos;),
        ///    clean = require(&apos;gulp-clean&apos;),
        ///    glob = require(&quot;glob&quot;);
        ///
        ///var paths = {
        ///    devModule: &quot;../Module/&quot;,
        ///    hostModule: &quot;./Module/&quot;,
        ///    hostWwwrootModules: &quot;./wwwroot/module/&quot;
        ///};
        ///
        ///var modules = loadModules();
        ///
        ///gulp.task(&apos;clean-module&apos;, function () {
        ///    return gulp.src([paths.hostModule + &apos;*&apos;, paths.hostWwwrootModules + &apos;*&apos;], { read: false })
        ///    .pipe(clean());
        ///});
        ///
        ///gulp.task(&apos;copy-module&apos;, [&apos;clean-module&apos;], function () {
        ///	modules.forEach(f [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string WebHost_gulpfile_js {
            get {
                return ResourceManager.GetString("WebHost_gulpfile_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 {
        ///	&quot;version&quot;: &quot;1.0.0&quot;,
        ///	&quot;name&quot;: &quot;aaa&quot;,
        ///	&quot;private&quot;: true,
        ///	&quot;devDependencies&quot;: {
        ///		&quot;gulp&quot;: &quot;3.9.1&quot;,
        ///		&quot;gulp-clean&quot;: &quot;0.3.2&quot;,
        ///		&quot;glob&quot;: &quot;7.1.1&quot;
        ///	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string WebHost_package_json {
            get {
                return ResourceManager.GetString("WebHost_package_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;configuration&gt;
        ///
        ///  &lt;!--
        ///    Configure your application settings in appsettings.json. Learn more at http://go.microsoft.com/fwlink/?LinkId=786380
        ///  --&gt;
        ///
        ///  &lt;system.webServer&gt;
        ///    &lt;handlers&gt;
        ///      &lt;add name=&quot;aspNetCore&quot; path=&quot;*&quot; verb=&quot;*&quot; modules=&quot;AspNetCoreModule&quot; resourceType=&quot;Unspecified&quot;/&gt;
        ///    &lt;/handlers&gt;
        ///    &lt;aspNetCore processPath=&quot;%LAUNCHER_PATH%&quot; arguments=&quot;%LAUNCHER_ARGS%&quot; stdoutLogEnabled=&quot;false&quot; stdoutLogFile=&quot;.\logs\stdout&quot; forwardWindowsAuthToken=&quot;f [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string WebHost_web_config {
            get {
                return ResourceManager.GetString("WebHost_web_config", resourceCulture);
            }
        }
    }
}
